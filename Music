import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix

# Load dataset
df = pd.read_csv(r"C:\Users\Dithin Krishna\Desktop\students_music_dataset.csv")

# Encode categorical variables
le_gender = LabelEncoder()
df['Gender'] = le_gender.fit_transform(df['Gender'])   # M=1, F=0

le_genre = LabelEncoder()
df['Favorite_Genre'] = le_genre.fit_transform(df['Favorite_Genre'])

# Features and target
X = df[['Age', 'Gender']]
y = df['Favorite_Genre']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Random Forest model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))

plt.figure(figsize=(6,4))
sns.countplot(x=le_genre.inverse_transform(df['Favorite_Genre']),
  

#genre by gender            hue=le_gender.inverse_transform(df['Gender']), palette="Set1")
plt.title("Favorite Genre by Gender")
plt.xlabel("Genre")
plt.ylabel("Count")
plt.legend(title="Gender")
plt.show()


age = int(input("Enter student's age: "))
gender = input("Enter student's gender (M/F): ")

gender_encoded = le_gender.transform([gender])[0]
new_student = pd.DataFrame({'Age':[age], 'Gender':[gender_encoded]})
pred_genre = le_genre.inverse_transform(model.predict(new_student))

print(f"Predicted Genre for the student: {pred_genre[0]}")
